import org.springframework.boot.web.servlet.ServletContextInitializer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.servlet.ServletContext;
import javax.servlet.SessionTrackingMode;
import java.util.Collections;

@Configuration
public class DisableSessionTrackingConfig {

    @Bean
    public ServletContextInitializer disableSessionTracking() {
        return new ServletContextInitializer() {
            @Override
            public void onStartup(ServletContext servletContext) {
                servletContext.setSessionTrackingModes(
                    Collections.singleton(SessionTrackingMode.NONE)
                );
            }
        };
    }
}




ERROR source=db.go:1109 msg="compaction failed" component=tsdb err="preallocate: no space left on device"

ts=2025-07-24T07:18:26.768278361Z level=info msg="peers changed" service=cluster peers_count=1 min_cluster_size=0 peers=tss-ideacoreuat
ts=2025-07-24T07:18:26.76840656Z level=info msg="tail routine: started" component_path=/ component_id=loki.source.file.in_swift_listener_logs component=tailer path=/weblogic/app_logs/in_swift_listner/service.log
ts=2025-07-24T07:18:26.76854908Z level=info msg="Seeked /weblogic/app_logs/in_swift_listner/service.log - &{Offset:1137445 Whence:0}" component_path=/ component_id=loki.source.file.in_swift_listener_logs component=tailer
ts=2025-07-24T07:18:26.784912507Z level=info msg="now listening for http traffic" service=http addr=127.0.0.1:12345
ts=2025-07-24T07:18:27.299515991Z level=warn msg="error sending batch, will retry" component_path=/ component_id=loki.write.default component=client host=10.191.158.42:4200 status=429 tenant="" error="server returned HTTP status 429 Too Many Requests (429): Ingestion rate limit exceeded for user fake (limit: 4194304 bytes/sec) while attempting to ingest '1441' lines totaling '1040251' bytes, reduce log volume or contact your Loki administrator to see if the limit can be increased"
ts=2025-07-24T07:18:28.408852336Z level=warn msg="error sending batch, will retry" component_path=/ component_id=loki.write.default component=client host=10.191.158.42:4200 status=429 tenant="" error="server returned HTTP status 429 Too Many Requests (429): Ingestion rate limit exceeded for user fake (limit: 4194304 bytes/sec) while attempting to ingest '1686' lines totaling '1043303' bytes, reduce log volume or contact your Loki administrator to see if the limit can be increased"



local.file_match "app_logs" {
  path_targets = [{ "__path__" = "/logs/*.log" }]
}

loki.source.file "app_logs" {
  targets    = local.file_match.app_logs.targets
  forward_to = [loki.process.add_app_labels.receiver]
}

loki.process "add_app_labels" {
  stage.static_labels {
    values = {
      service_name = "Starter"
      pod_name     = "linux-host"  # Replace or set via env("HOSTNAME") if needed
    }
  }
  forward_to = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://localhost:3100/loki/api/v1/push"
  }
}


server {
    listen 80;
    server_name yourdomain.com;

    location /grafana/ {
        proxy_pass         http://localhost:3000/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        rewrite ^/grafana/(.*) /$1 break;
    }
}


[server]
root_url = http://192.168.1.100/grafana/
serve_from_sub_path = true


auth_enabled: false

server:
  http_listen_port: 3100
  log_level: info

ingester:
  lifecycler:
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
  final_sleep: 0s
  chunk_idle_period: 5m
  max_chunk_age: 1h

schema_config:
  configs:
    - from: 2024-01-01
      store: boltdb-shipper
      object_store: filesystem
      schema: v13
      index:
        prefix: index_
        period: 24h

storage_config:
  boltdb_shipper:
    active_index_directory: /tmp/loki/index
    cache_location: /tmp/loki/boltdb-cache
    shared_store: filesystem
  filesystem:
    directory: /tmp/loki/chunks

limits_config:
  enforce_metric_name: false
  reject_old_samples: true
  reject_old_samples_max_age: 168h

chunk_store_config:
  max_look_back_period: 0s

table_manager:
  retention_deletes_enabled: false
  retention_period: 0s


server "http" {
  listen_address = "0.0.0.0:12345" # Alloy UI/metrics port
  log_level      = "info"
}

local.file_match "app_logs" {
  path_targets = {
    "app" = "/uat/xsys/app.log"
  }
  forward_to = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://localhost:3100/loki/api/v1/push"
  }
}
