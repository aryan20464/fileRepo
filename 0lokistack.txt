spring.application.name=dbcon
# Set the root logging level (INFO, DEBUG, ERROR, etc.)
logging.level.root=INFO

# Configure log file location
#logging.file.name=/var/log/app-logs/app.log
logging.file.name=/app/logs/app.log
#logging.file.name=D:\\app_logs\\app.log
#logging.file.name=/logs/app.log

# Log pattern (optional - keeps logs readable)
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] -  %-5level %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

server.servlet.context-path=/dbcon
server.port=4320

spring.datasource.url=jdbc:oracle:thin:@//10.191.216.61:1522/IDEACMM
spring.datasource.username=rfm
spring.datasource.password=rfm
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver


FROM tkgsharedharbor.corp.ad.sbi/idea-indents-dev/eclipse-temurin:17-alpine

# Set the timezone
ENV TZ=Asia/Dhaka
RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo "$TZ" > /etc/timezone

# Create group and user
RUN addgroup --system --gid 1001 itss && \
    adduser --system --uid 1001 --ingroup itss itss

# Create application directories
RUN mkdir -p /app/logs && \
    mkdir -p /var/log/app-logs

# Set ownership and permissions
RUN chown -R itss:itss /app /var/log/app-logs  && \
    chmod -R 775 /app/logs /var/log/app-logs

# Set working directory
WORKDIR /app

# Copy application jar
COPY target/dbcon.jar dbcon.jar
RUN chown itss:itss dbcon.jar

# Switch to non-root user
USER itss

# Expose port
EXPOSE 4320

# Entry point
ENTRYPOINT ["java", "-jar", "dbcon.jar"]


# ----------------------------------------
# ConfigMap: Alloy Configuration (Flow Mode)
# ----------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config-sidecar
  namespace: uatcmm
data:
  config.alloy: |
    // Match all application logs written by the main container
    local.file_match "app_logs" {
      path_targets = [{ "__path__" = "/logs/*.log" }]
    }

    // Read logs from the matched paths
    loki.source.file "app_logs" {
      targets    = local.file_match.app_logs.targets
      forward_to = [loki.process.add_app_labels.receiver]
    }

    // Add labels for service and pod
    loki.process "add_app_labels" {
      stage.static_labels {
        values = {
          service_name = "DBCon",
          pod_name = env("POD_NAME"),
        }
      }
      forward_to = [loki.write.to_loki.receiver]
    }

    // Send to Loki
    loki.write "to_loki" {
      endpoint {
        url = "http://loki.uatcmm.svc.cluster.local:3100/loki/api/v1/push"
      }
    }

---
# ----------------------------------------
# Deployment: App + Alloy Sidecar
# ----------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbcon-app
  namespace: uatcmm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dbcon-app
  template:
    metadata:
      labels:
        app: dbcon-app
    spec:
      containers:
        - name: dbcon-app
          image: tkgsharedharbor.corp.ad.sbi/uat-cmm/dbcon:2.0
          ports:
            - containerPort: 4320
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
          # optional: ensure logs are written to /app/logs/*.log
          env:
            - name: LOG_DIR
              value: /app/logs

        - name: alloy
          image: tkgsharedharbor.corp.ad.sbi/itss/grafana-alloy:1.11.0
          args: ["run", "/etc/alloy/config.alloy"]
          volumeMounts:
            - name: alloy-config-sidecar
              mountPath: /etc/alloy
              readOnly: true
            - name: app-logs
              mountPath: /logs
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]

      # Shared emptyDir volume between app and alloy containers
      volumes:
        - name: app-logs
          emptyDir: {}
        - name: alloy-config-sidecar
          configMap:
            name: alloy-config-sidecar

---
# ----------------------------------------
# Service: Expose dbcon-app via ClusterIP
# ----------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: dbcon-app-service
  namespace: uatcmm
spec:
  selector:
    app: dbcon-app
  type: ClusterIP
  ports:
    - port: 4320
      targetPort: 4320
