apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: loki
  labels:
    app: alloy
data:
  config.alloy: |
    // Loki client configuration
    loki.write "default" {
      endpoint {
        url = "http://loki.loki.svc.cluster.local:3100/loki/api/v1/push"
      }
    }

    // Discover all pods on the node
    discovery.kubernetes "pods" {
      role = "pod"
    }

    // Discover container logs from /var/log/pods
    local.file_match "logs" {
      path_targets = discovery.kubernetes.pods.targets
      path          = "/var/log/pods/*/*/*.log"
    }

    // Parse Kubernetes pod log format
    loki.source.file "k8s" {
      targets    = local.file_match.logs.targets
      forward_to = [loki.process.k8s.receiver]
    }

    // Add metadata (namespace, pod, container)
    loki.process "k8s" {
      stage.json {
        expressions = { stream = "stream", log = "log" }
      }
      stage.labels {
        values = {
          job         = "kubernetes-pods",
          namespace   = "{{ .__meta_kubernetes_namespace }}",
          pod         = "{{ .__meta_kubernetes_pod_name }}",
          container   = "{{ .__meta_kubernetes_container_name }}"
        }
      }
      stage.output {
        source = "log"
      }
      forward_to = [loki.write.default.receiver]
    }









apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alloy
  namespace: loki
  labels:
    app: alloy
spec:
  selector:
    matchLabels:
      app: alloy
  template:
    metadata:
      labels:
        app: alloy
    spec:
      serviceAccountName: alloy
      containers:
        - name: alloy
          image: grafana/alloy:v1.4.0
          args:
            - run
            - /etc/alloy/config.alloy
          ports:
            - containerPort: 12345
              name: http-metrics
          volumeMounts:
            - name: alloy-config
              mountPath: /etc/alloy
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          resources:
            limits:
              memory: "300Mi"
              cpu: "200m"
            requests:
              memory: "150Mi"
              cpu: "100m"
      volumes:
        - name: alloy-config
          configMap:
            name: alloy-config
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
      tolerations:
        - operator: Exists
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alloy
  namespace: loki
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alloy
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "nodes"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alloy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alloy
subjects:
  - kind: ServiceAccount
    name: alloy
    namespace: loki
