init compactor: mkdir /var/loki: permission denied
error initialising module: compactor
github.com/grafana/dskit/modules.(*Manager).initModule
        /src/loki/vendor/github.com/grafana/dskit/modules/modules.go:138
github.com/grafana/dskit/modules.(*Manager).InitModuleServices
        /src/loki/vendor/github.com/grafana/dskit/modules/modules.go:108
github.com/grafana/loki/v3/pkg/loki.(*Loki).Run
        /src/loki/pkg/loki/loki.go:495
main.main
        /src/loki/cmd/loki/main.go:129
runtime.main
        /usr/local/go/src/runtime/proc.go:272
runtime.goexit
        /usr/local/go/src/runtime/asm_amd64.s:1700
level=info ts=2025-07-23T12:02:51.590493545Z caller=main.go:126 msg="Starting Loki" version="(version=3.4.5, branch=release-3.4.x, revision=b2c87ba6)"
level=info ts=2025-07-23T12:02:51.590538023Z caller=main.go:127 msg="Loading configuration file" filename=loki-config-fixed.yaml
level=info ts=2025-07-23T12:02:51.590659157Z caller=modules.go:1246 msg="Ruler storage is not configured; ruler will not be started."
level=info ts=2025-07-23T12:02:51.604367729Z caller=server.go:351 msg="server listening on addresses" http=0.0.0.0:3100 grpc=0.0.0.0:9095
level=info ts=2025-07-23T12:02:51.608892117Z caller=table_manager.go:136 index-store=boltdb-shipper-2020-10-24 msg="uploading tables"
level=info ts=2025-07-23T12:02:51.608981975Z caller=table_manager.go:300 index-store=boltdb-shipper-2020-10-24 msg="query readiness setup completed" duration=2.232Âµs distinct_users_len=0 distinct_users=
level=info ts=2025-07-23T12:02:51.609023747Z caller=shipper.go:165 index-store=boltdb-shipper-2020-10-24 msg="starting index shipper in RW mode"
level=info ts=2025-07-23T12:02:51.609701585Z caller=index_client.go:91 index-store=boltdb-shipper-2020-10-24 msg="starting boltdb shipper in RW mode"
level=info ts=2025-07-23T12:02:51.609774429Z caller=table_manager.go:187 index-store=boltdb-shipper-2020-10-24 msg="handing over indexes to shipper"
level=error ts=2025-07-23T12:02:51.612832739Z caller=log.go:216 msg="error running loki" err="init compactor: mkdir /var/loki: permission denied\nerror initialising module: compactor\ngithub.com/grafana/dskit/modules.(*Manager).initModule\n\t/src/loki/vendor/github.com/grafana/dskit/modules/modules.go:138\ngithub.com/grafana/dskit/modules.(*Manager).InitModuleServices\n\t/src/loki/vendor/github.com/grafana/dskit/modules/modules.go:108\ngithub.com/grafana/loki/v3/pkg/loki.(*Loki).Run\n\t/src/loki/pkg/loki/loki.go:495\nmain.main\n\t/src/loki/cmd/loki/main.go:129\nruntime.main\n\t/usr/local/go/src/runtime/proc.go:272\nruntime.goexit\n\t/usr/local/go/src/runtime/asm_amd64.s:1700"



server {
    listen 80;
    server_name yourdomain.com;

    location /grafana/ {
        proxy_pass         http://localhost:3000/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        rewrite ^/grafana/(.*) /$1 break;
    }
}


[server]
root_url = http://192.168.1.100/grafana/
serve_from_sub_path = true


auth_enabled: false

server:
  http_listen_port: 3100
  log_level: info

ingester:
  lifecycler:
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
  final_sleep: 0s
  chunk_idle_period: 5m
  max_chunk_age: 1h

schema_config:
  configs:
    - from: 2024-01-01
      store: boltdb-shipper
      object_store: filesystem
      schema: v13
      index:
        prefix: index_
        period: 24h

storage_config:
  boltdb_shipper:
    active_index_directory: /tmp/loki/index
    cache_location: /tmp/loki/boltdb-cache
    shared_store: filesystem
  filesystem:
    directory: /tmp/loki/chunks

limits_config:
  enforce_metric_name: false
  reject_old_samples: true
  reject_old_samples_max_age: 168h

chunk_store_config:
  max_look_back_period: 0s

table_manager:
  retention_deletes_enabled: false
  retention_period: 0s


server "http" {
  listen_address = "0.0.0.0:12345" # Alloy UI/metrics port
  log_level      = "info"
}

local.file_match "app_logs" {
  path_targets = {
    "app" = "/uat/xsys/app.log"
  }
  forward_to = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://localhost:3100/loki/api/v1/push"
  }
}
