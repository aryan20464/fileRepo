this.allData = this.allData.map(item => {
  const createdAt = new Date(item.createdAt);
  const updatedAt = item.updatedAt ? new Date(item.updatedAt) : null;

  if (updatedAt) {
    const diffMs = updatedAt.getTime() - createdAt.getTime(); // milliseconds
    const diffHours = diffMs / (1000 * 60 * 60); // convert ms to hours
    const diffDays = diffMs / (1000 * 60 * 60 * 24);

    return {
      ...item,
      tatHours: diffHours.toFixed(2)  // keep 2 decimal places
      tatDays : diffDays.toFixed(2) // keep 2 decimal places
    };
  } else {
    return {
      ...item,
      tatHours: '',  // or null, or 'Pending'
      tatDays : '', // or null, or 'Pending'
    };
  }
});


List<CircleSummary> summaries = new ArrayList<>();

@Getter
@Setter
public class CircleSummary {
    private String ccode;
    private String circleName;
    private long total;
    private long pending;
    private long approved;
    private long rejected;
    private long received;
    private long completed;}

The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?
  Type 'Object' is missing the following properties from type 'any[]': length, pop, push, concat, and 26 more.ts(2696)
(property) LhouserComponent.branchReportData: any[]

<!-- Table to display results -->
<table *ngIf="data.length > 0" border="1" cellpadding="8" cellspacing="0">
  <thead>
    <tr>
      <th *ngFor="let header of tableHeaders">{{ header }}</th>
    </tr>
  </thead>
  <tbody>
    <tr *ngFor="let row of data">
      <td *ngFor="let header of tableHeaders">{{ row[header] }}</td>
    </tr>
  </tbody>
</table>

<!-- No data message -->
<p *ngIf="data.length === 0 && submitted">No data found for selected dates.</p>



import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html'
})
export class AppComponent {
  fromDate: string = '';
  toDate: string = '';
  data: any[] = [];
  tableHeaders: string[] = [];
  submitted: boolean = false;

  constructor(private http: HttpClient) {}

  onSubmit() {
    const payload = {
      fromDate: this.fromDate,
      toDate: this.toDate
    };

    this.http.post<any[]>('http://your-backend-url/api/your-endpoint', payload)
      .subscribe({
        next: (response) => {
          this.data = response || [];
          this.tableHeaders = this.data.length > 0 ? Object.keys(this.data[0]) : [];
          this.submitted = true;
        },
        error: (error) => {
          console.error('Error fetching data', error);
          this.data = [];
          this.tableHeaders = [];
          this.submitted = true;
        }
      });
  }
}
