apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: uatcmm
data:
  config.alloy: |
    server "default" {
      http {
        listen_port = 9080
      }
    }

    discovery.static "static_target" {
      targets = ["localhost"]
      labels = {
        job = "springboot-app"
        pod_name = "${POD_NAME}"
      }
    }

    local.file_match "logs" {
      path_targets = discovery.static.static_target.targets
      paths        = ["/logs/*.log"]
    }

    log.process "multiline" {
      forward_to = [log.forward.default.receiver]
      stage {
        multiline {
          firstline_pattern = "^\\S"
        }
      }
    }

    log.forward "default" {
      inputs = [local.file_match.logs.output]
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: springboot-log-pvc
  namespace: uatcmm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-headless
  namespace: uatcmm
spec:
  clusterIP: None
  selector:
    app: springboot-app
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-service
  namespace: uatcmm
spec:
  selector:
    app: springboot-app
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: springboot-app
  namespace: uatcmm
spec:
  serviceName: "springboot-headless"
  replicas: 1
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
        - name: springboot-container
          image: your-springboot-image:latest
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: log-volume
              mountPath: /logs
        - name: alloy
          image: tkgsharedharbor.corp.ad.sbi/itss/grafana-alloy:1.8.3
          args:
            - run
            - /etc/alloy/config.alloy
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: log-volume
              mountPath: /logs
            - name: alloy-config-volume
              mountPath: /etc/alloy
      volumes:
        - name: log-volume
          persistentVolumeClaim:
            claimName: springboot-log-pvc
        - name: alloy-config-volume
          configMap:
            name: alloy-config
